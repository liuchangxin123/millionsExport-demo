/*
 * This file is generated by jOOQ.
 */
package com.pluto.millionsExport.jooqData.tables;


import com.pluto.millionsExport.jooqData.Keys;
import com.pluto.millionsExport.jooqData.Learn;
import com.pluto.millionsExport.jooqData.tables.records.MillionsDataRecord;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 百万数据导入导出测试
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MillionsData extends TableImpl<MillionsDataRecord> {

    private static final long serialVersionUID = -702466951;

    /**
     * The reference instance of <code>learn.millions_data</code>
     */
    public static final MillionsData MILLIONS_DATA = new MillionsData();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MillionsDataRecord> getRecordType() {
        return MillionsDataRecord.class;
    }

    /**
     * The column <code>learn.millions_data.id</code>. 主键
     */
    public final TableField<MillionsDataRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>learn.millions_data.staff_no</code>. 员工号
     */
    public final TableField<MillionsDataRecord, Long> STAFF_NO = createField(DSL.name("staff_no"), org.jooq.impl.SQLDataType.BIGINT, this, "员工号");

    /**
     * The column <code>learn.millions_data.salary</code>. 薪水
     */
    public final TableField<MillionsDataRecord, BigDecimal> SALARY = createField(DSL.name("salary"), org.jooq.impl.SQLDataType.DECIMAL(10, 2), this, "薪水");

    /**
     * The column <code>learn.millions_data.start_time</code>. 开始时间
     */
    public final TableField<MillionsDataRecord, LocalDateTime> START_TIME = createField(DSL.name("start_time"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "开始时间");

    /**
     * The column <code>learn.millions_data.end_time</code>. 结束时间
     */
    public final TableField<MillionsDataRecord, LocalDateTime> END_TIME = createField(DSL.name("end_time"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "结束时间");

    /**
     * Create a <code>learn.millions_data</code> table reference
     */
    public MillionsData() {
        this(DSL.name("millions_data"), null);
    }

    /**
     * Create an aliased <code>learn.millions_data</code> table reference
     */
    public MillionsData(String alias) {
        this(DSL.name(alias), MILLIONS_DATA);
    }

    /**
     * Create an aliased <code>learn.millions_data</code> table reference
     */
    public MillionsData(Name alias) {
        this(alias, MILLIONS_DATA);
    }

    private MillionsData(Name alias, Table<MillionsDataRecord> aliased) {
        this(alias, aliased, null);
    }

    private MillionsData(Name alias, Table<MillionsDataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("百万数据导入导出测试"), TableOptions.table());
    }

    public <O extends Record> MillionsData(Table<O> child, ForeignKey<O, MillionsDataRecord> key) {
        super(child, key, MILLIONS_DATA);
    }

    @Override
    public Schema getSchema() {
        return Learn.LEARN;
    }

    @Override
    public Identity<MillionsDataRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MILLIONS_DATA;
    }

    @Override
    public UniqueKey<MillionsDataRecord> getPrimaryKey() {
        return Keys.KEY_MILLIONS_DATA_PRIMARY;
    }

    @Override
    public List<UniqueKey<MillionsDataRecord>> getKeys() {
        return Arrays.<UniqueKey<MillionsDataRecord>>asList(Keys.KEY_MILLIONS_DATA_PRIMARY);
    }

    @Override
    public MillionsData as(String alias) {
        return new MillionsData(DSL.name(alias), this);
    }

    @Override
    public MillionsData as(Name alias) {
        return new MillionsData(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MillionsData rename(String name) {
        return new MillionsData(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MillionsData rename(Name name) {
        return new MillionsData(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Long, BigDecimal, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
