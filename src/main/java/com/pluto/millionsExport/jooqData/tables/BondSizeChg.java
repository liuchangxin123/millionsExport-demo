/*
 * This file is generated by jOOQ.
 */
package com.pluto.millionsExport.jooqData.tables;


import com.pluto.millionsExport.jooqData.Indexes;
import com.pluto.millionsExport.jooqData.Keys;
import com.pluto.millionsExport.jooqData.Learn;
import com.pluto.millionsExport.jooqData.tables.records.BondSizeChgRecord;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BondSizeChg extends TableImpl<BondSizeChgRecord> {

    private static final long serialVersionUID = -1376630652;

    /**
     * The reference instance of <code>learn.bond_size_chg</code>
     */
    public static final BondSizeChg BOND_SIZE_CHG = new BondSizeChg();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BondSizeChgRecord> getRecordType() {
        return BondSizeChgRecord.class;
    }

    /**
     * The column <code>learn.bond_size_chg.ID</code>.
     */
    public final TableField<BondSizeChgRecord, Long> ID = createField(DSL.name("ID"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>learn.bond_size_chg.BOND_ID</code>.
     */
    public final TableField<BondSizeChgRecord, String> BOND_ID = createField(DSL.name("BOND_ID"), org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>learn.bond_size_chg.PUBLISH_DATE</code>.
     */
    public final TableField<BondSizeChgRecord, LocalDate> PUBLISH_DATE = createField(DSL.name("PUBLISH_DATE"), org.jooq.impl.SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>learn.bond_size_chg.CHANGE_DATE</code>.
     */
    public final TableField<BondSizeChgRecord, LocalDate> CHANGE_DATE = createField(DSL.name("CHANGE_DATE"), org.jooq.impl.SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>learn.bond_size_chg.CHANGE_SIZE</code>.
     */
    public final TableField<BondSizeChgRecord, BigDecimal> CHANGE_SIZE = createField(DSL.name("CHANGE_SIZE"), org.jooq.impl.SQLDataType.DECIMAL(19, 8), this, "");

    /**
     * The column <code>learn.bond_size_chg.REMAIN_SIZE</code>.
     */
    public final TableField<BondSizeChgRecord, BigDecimal> REMAIN_SIZE = createField(DSL.name("REMAIN_SIZE"), org.jooq.impl.SQLDataType.DECIMAL(19, 8), this, "");

    /**
     * The column <code>learn.bond_size_chg.CHANGE_REASON_CD</code>.
     */
    public final TableField<BondSizeChgRecord, String> CHANGE_REASON_CD = createField(DSL.name("CHANGE_REASON_CD"), org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>learn.bond_size_chg.UPDATE_TIME</code>.
     */
    public final TableField<BondSizeChgRecord, LocalDateTime> UPDATE_TIME = createField(DSL.name("UPDATE_TIME"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>learn.bond_size_chg.TMSTAMP</code>.
     */
    public final TableField<BondSizeChgRecord, Long> TMSTAMP = createField(DSL.name("TMSTAMP"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>learn.bond_size_chg</code> table reference
     */
    public BondSizeChg() {
        this(DSL.name("bond_size_chg"), null);
    }

    /**
     * Create an aliased <code>learn.bond_size_chg</code> table reference
     */
    public BondSizeChg(String alias) {
        this(DSL.name(alias), BOND_SIZE_CHG);
    }

    /**
     * Create an aliased <code>learn.bond_size_chg</code> table reference
     */
    public BondSizeChg(Name alias) {
        this(alias, BOND_SIZE_CHG);
    }

    private BondSizeChg(Name alias, Table<BondSizeChgRecord> aliased) {
        this(alias, aliased, null);
    }

    private BondSizeChg(Name alias, Table<BondSizeChgRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> BondSizeChg(Table<O> child, ForeignKey<O, BondSizeChgRecord> key) {
        super(child, key, BOND_SIZE_CHG);
    }

    @Override
    public Schema getSchema() {
        return Learn.LEARN;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.BOND_SIZE_CHG_IDX_BOND_SIZE_CHG1);
    }

    @Override
    public UniqueKey<BondSizeChgRecord> getPrimaryKey() {
        return Keys.KEY_BOND_SIZE_CHG_PRIMARY;
    }

    @Override
    public List<UniqueKey<BondSizeChgRecord>> getKeys() {
        return Arrays.<UniqueKey<BondSizeChgRecord>>asList(Keys.KEY_BOND_SIZE_CHG_PRIMARY);
    }

    @Override
    public BondSizeChg as(String alias) {
        return new BondSizeChg(DSL.name(alias), this);
    }

    @Override
    public BondSizeChg as(Name alias) {
        return new BondSizeChg(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BondSizeChg rename(String name) {
        return new BondSizeChg(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BondSizeChg rename(Name name) {
        return new BondSizeChg(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, String, LocalDate, LocalDate, BigDecimal, BigDecimal, String, LocalDateTime, Long> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
