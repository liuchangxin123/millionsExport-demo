/*
 * This file is generated by jOOQ.
 */
package com.pluto.millionsExport.jooqData.tables.records;


import com.pluto.millionsExport.jooqData.tables.Good;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GoodRecord extends UpdatableRecordImpl<GoodRecord> implements Record12<Integer, String, String, String, String, Integer, BigDecimal, BigDecimal, Byte, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1678270704;

    /**
     * Setter for <code>learn.good.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>learn.good.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>learn.good.sn</code>. 编码

     */
    public void setSn(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>learn.good.sn</code>. 编码

     */
    public String getSn() {
        return (String) get(1);
    }

    /**
     * Setter for <code>learn.good.name</code>. 名字
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>learn.good.name</code>. 名字
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>learn.good.alias</code>. 别名
     */
    public void setAlias(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>learn.good.alias</code>. 别名
     */
    public String getAlias() {
        return (String) get(3);
    }

    /**
     * Setter for <code>learn.good.picture</code>. 图片

     */
    public void setPicture(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>learn.good.picture</code>. 图片

     */
    public String getPicture() {
        return (String) get(4);
    }

    /**
     * Setter for <code>learn.good.stock</code>. 库存
     */
    public void setStock(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>learn.good.stock</code>. 库存
     */
    public Integer getStock() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>learn.good.cost_price</code>. 进货价

     */
    public void setCostPrice(BigDecimal value) {
        set(6, value);
    }

    /**
     * Getter for <code>learn.good.cost_price</code>. 进货价

     */
    public BigDecimal getCostPrice() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>learn.good.price</code>. 售价
     */
    public void setPrice(BigDecimal value) {
        set(7, value);
    }

    /**
     * Getter for <code>learn.good.price</code>. 售价
     */
    public BigDecimal getPrice() {
        return (BigDecimal) get(7);
    }

    /**
     * Setter for <code>learn.good.status</code>. 上下架0上架；1下架
     */
    public void setStatus(Byte value) {
        set(8, value);
    }

    /**
     * Getter for <code>learn.good.status</code>. 上下架0上架；1下架
     */
    public Byte getStatus() {
        return (Byte) get(8);
    }

    /**
     * Setter for <code>learn.good.operate</code>. 操作人
     */
    public void setOperate(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>learn.good.operate</code>. 操作人
     */
    public String getOperate() {
        return (String) get(9);
    }

    /**
     * Setter for <code>learn.good.created</code>. 创建时间
     */
    public void setCreated(LocalDateTime value) {
        set(10, value);
    }

    /**
     * Getter for <code>learn.good.created</code>. 创建时间
     */
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(10);
    }

    /**
     * Setter for <code>learn.good.updated</code>. 更新时间
     */
    public void setUpdated(LocalDateTime value) {
        set(11, value);
    }

    /**
     * Getter for <code>learn.good.updated</code>. 更新时间
     */
    public LocalDateTime getUpdated() {
        return (LocalDateTime) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<Integer, String, String, String, String, Integer, BigDecimal, BigDecimal, Byte, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<Integer, String, String, String, String, Integer, BigDecimal, BigDecimal, Byte, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Good.GOOD.ID;
    }

    @Override
    public Field<String> field2() {
        return Good.GOOD.SN;
    }

    @Override
    public Field<String> field3() {
        return Good.GOOD.NAME;
    }

    @Override
    public Field<String> field4() {
        return Good.GOOD.ALIAS;
    }

    @Override
    public Field<String> field5() {
        return Good.GOOD.PICTURE;
    }

    @Override
    public Field<Integer> field6() {
        return Good.GOOD.STOCK;
    }

    @Override
    public Field<BigDecimal> field7() {
        return Good.GOOD.COST_PRICE;
    }

    @Override
    public Field<BigDecimal> field8() {
        return Good.GOOD.PRICE;
    }

    @Override
    public Field<Byte> field9() {
        return Good.GOOD.STATUS;
    }

    @Override
    public Field<String> field10() {
        return Good.GOOD.OPERATE;
    }

    @Override
    public Field<LocalDateTime> field11() {
        return Good.GOOD.CREATED;
    }

    @Override
    public Field<LocalDateTime> field12() {
        return Good.GOOD.UPDATED;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getSn();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getAlias();
    }

    @Override
    public String component5() {
        return getPicture();
    }

    @Override
    public Integer component6() {
        return getStock();
    }

    @Override
    public BigDecimal component7() {
        return getCostPrice();
    }

    @Override
    public BigDecimal component8() {
        return getPrice();
    }

    @Override
    public Byte component9() {
        return getStatus();
    }

    @Override
    public String component10() {
        return getOperate();
    }

    @Override
    public LocalDateTime component11() {
        return getCreated();
    }

    @Override
    public LocalDateTime component12() {
        return getUpdated();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getSn();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getAlias();
    }

    @Override
    public String value5() {
        return getPicture();
    }

    @Override
    public Integer value6() {
        return getStock();
    }

    @Override
    public BigDecimal value7() {
        return getCostPrice();
    }

    @Override
    public BigDecimal value8() {
        return getPrice();
    }

    @Override
    public Byte value9() {
        return getStatus();
    }

    @Override
    public String value10() {
        return getOperate();
    }

    @Override
    public LocalDateTime value11() {
        return getCreated();
    }

    @Override
    public LocalDateTime value12() {
        return getUpdated();
    }

    @Override
    public GoodRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public GoodRecord value2(String value) {
        setSn(value);
        return this;
    }

    @Override
    public GoodRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public GoodRecord value4(String value) {
        setAlias(value);
        return this;
    }

    @Override
    public GoodRecord value5(String value) {
        setPicture(value);
        return this;
    }

    @Override
    public GoodRecord value6(Integer value) {
        setStock(value);
        return this;
    }

    @Override
    public GoodRecord value7(BigDecimal value) {
        setCostPrice(value);
        return this;
    }

    @Override
    public GoodRecord value8(BigDecimal value) {
        setPrice(value);
        return this;
    }

    @Override
    public GoodRecord value9(Byte value) {
        setStatus(value);
        return this;
    }

    @Override
    public GoodRecord value10(String value) {
        setOperate(value);
        return this;
    }

    @Override
    public GoodRecord value11(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public GoodRecord value12(LocalDateTime value) {
        setUpdated(value);
        return this;
    }

    @Override
    public GoodRecord values(Integer value1, String value2, String value3, String value4, String value5, Integer value6, BigDecimal value7, BigDecimal value8, Byte value9, String value10, LocalDateTime value11, LocalDateTime value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GoodRecord
     */
    public GoodRecord() {
        super(Good.GOOD);
    }

    /**
     * Create a detached, initialised GoodRecord
     */
    public GoodRecord(Integer id, String sn, String name, String alias, String picture, Integer stock, BigDecimal costPrice, BigDecimal price, Byte status, String operate, LocalDateTime created, LocalDateTime updated) {
        super(Good.GOOD);

        set(0, id);
        set(1, sn);
        set(2, name);
        set(3, alias);
        set(4, picture);
        set(5, stock);
        set(6, costPrice);
        set(7, price);
        set(8, status);
        set(9, operate);
        set(10, created);
        set(11, updated);
    }
}
