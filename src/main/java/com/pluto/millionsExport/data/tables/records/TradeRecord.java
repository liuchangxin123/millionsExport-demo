/*
 * This file is generated by jOOQ.
 */
package com.pluto.millionsExport.data.tables.records;


import com.pluto.millionsExport.data.tables.Trade;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TradeRecord extends UpdatableRecordImpl<TradeRecord> implements Record6<Integer, String, BigDecimal, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 923790254;

    /**
     * Setter for <code>learn.trade.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>learn.trade.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>learn.trade.good_sn</code>. 商品sn
     */
    public void setGoodSn(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>learn.trade.good_sn</code>. 商品sn
     */
    public String getGoodSn() {
        return (String) get(1);
    }

    /**
     * Setter for <code>learn.trade.reel_price</code>. 卖出价格
     */
    public void setReelPrice(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>learn.trade.reel_price</code>. 卖出价格
     */
    public BigDecimal getReelPrice() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>learn.trade.operate</code>. 操作人
     */
    public void setOperate(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>learn.trade.operate</code>. 操作人
     */
    public String getOperate() {
        return (String) get(3);
    }

    /**
     * Setter for <code>learn.trade.created</code>. 创建时间
     */
    public void setCreated(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>learn.trade.created</code>. 创建时间
     */
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>learn.trade.updated</code>. 更新时间
     */
    public void setUpdated(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>learn.trade.updated</code>. 更新时间
     */
    public LocalDateTime getUpdated() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, BigDecimal, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, String, BigDecimal, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Trade.TRADE.ID;
    }

    @Override
    public Field<String> field2() {
        return Trade.TRADE.GOOD_SN;
    }

    @Override
    public Field<BigDecimal> field3() {
        return Trade.TRADE.REEL_PRICE;
    }

    @Override
    public Field<String> field4() {
        return Trade.TRADE.OPERATE;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Trade.TRADE.CREATED;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Trade.TRADE.UPDATED;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getGoodSn();
    }

    @Override
    public BigDecimal component3() {
        return getReelPrice();
    }

    @Override
    public String component4() {
        return getOperate();
    }

    @Override
    public LocalDateTime component5() {
        return getCreated();
    }

    @Override
    public LocalDateTime component6() {
        return getUpdated();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getGoodSn();
    }

    @Override
    public BigDecimal value3() {
        return getReelPrice();
    }

    @Override
    public String value4() {
        return getOperate();
    }

    @Override
    public LocalDateTime value5() {
        return getCreated();
    }

    @Override
    public LocalDateTime value6() {
        return getUpdated();
    }

    @Override
    public TradeRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public TradeRecord value2(String value) {
        setGoodSn(value);
        return this;
    }

    @Override
    public TradeRecord value3(BigDecimal value) {
        setReelPrice(value);
        return this;
    }

    @Override
    public TradeRecord value4(String value) {
        setOperate(value);
        return this;
    }

    @Override
    public TradeRecord value5(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public TradeRecord value6(LocalDateTime value) {
        setUpdated(value);
        return this;
    }

    @Override
    public TradeRecord values(Integer value1, String value2, BigDecimal value3, String value4, LocalDateTime value5, LocalDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TradeRecord
     */
    public TradeRecord() {
        super(Trade.TRADE);
    }

    /**
     * Create a detached, initialised TradeRecord
     */
    public TradeRecord(Integer id, String goodSn, BigDecimal reelPrice, String operate, LocalDateTime created, LocalDateTime updated) {
        super(Trade.TRADE);

        set(0, id);
        set(1, goodSn);
        set(2, reelPrice);
        set(3, operate);
        set(4, created);
        set(5, updated);
    }
}
