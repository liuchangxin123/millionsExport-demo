/*
 * This file is generated by jOOQ.
 */
package com.pluto.millionsExport.data.tables.daos;


import com.pluto.millionsExport.data.tables.PatientMedicalRecord;
import com.pluto.millionsExport.data.tables.records.PatientMedicalRecordRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.JSON;
import org.jooq.impl.DAOImpl;


/**
 * 患者结构化病历病程表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PatientMedicalRecordDao extends DAOImpl<PatientMedicalRecordRecord, com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord, String> {

    /**
     * Create a new PatientMedicalRecordDao without any configuration
     */
    public PatientMedicalRecordDao() {
        super(PatientMedicalRecord.PATIENT_MEDICAL_RECORD, com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord.class);
    }

    /**
     * Create a new PatientMedicalRecordDao with an attached configuration
     */
    public PatientMedicalRecordDao(Configuration configuration) {
        super(PatientMedicalRecord.PATIENT_MEDICAL_RECORD, com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord.class, configuration);
    }

    @Override
    public String getId(com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
        return fetchRange(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchById(String... values) {
        return fetch(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord fetchOneById(String value) {
        return fetchOne(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.ID, value);
    }

    /**
     * Fetch records that have <code>create_by BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchRangeOfCreateBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.CREATE_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_by IN (values)</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchByCreateBy(String... values) {
        return fetch(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.CREATE_BY, values);
    }

    /**
     * Fetch records that have <code>create_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchRangeOfCreateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.CREATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchByCreateTime(LocalDateTime... values) {
        return fetch(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>update_by BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchRangeOfUpdateBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.UPDATE_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>update_by IN (values)</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchByUpdateBy(String... values) {
        return fetch(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.UPDATE_BY, values);
    }

    /**
     * Fetch records that have <code>update_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchRangeOfUpdateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.UPDATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>update_time IN (values)</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchByUpdateTime(LocalDateTime... values) {
        return fetch(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.UPDATE_TIME, values);
    }

    /**
     * Fetch records that have <code>revision BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchRangeOfRevision(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.REVISION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>revision IN (values)</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchByRevision(Integer... values) {
        return fetch(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.REVISION, values);
    }

    /**
     * Fetch records that have <code>deleted BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchRangeOfDeleted(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.DELETED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>deleted IN (values)</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchByDeleted(Byte... values) {
        return fetch(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.DELETED, values);
    }

    /**
     * Fetch records that have <code>patient_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchRangeOfPatientId(String lowerInclusive, String upperInclusive) {
        return fetchRange(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.PATIENT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>patient_id IN (values)</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchByPatientId(String... values) {
        return fetch(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.PATIENT_ID, values);
    }

    /**
     * Fetch records that have <code>medical_type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchRangeOfMedicalType(String lowerInclusive, String upperInclusive) {
        return fetchRange(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.MEDICAL_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>medical_type IN (values)</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchByMedicalType(String... values) {
        return fetch(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.MEDICAL_TYPE, values);
    }

    /**
     * Fetch records that have <code>diagnosis_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchRangeOfDiagnosisTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.DIAGNOSIS_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>diagnosis_time IN (values)</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchByDiagnosisTime(LocalDateTime... values) {
        return fetch(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.DIAGNOSIS_TIME, values);
    }

    /**
     * Fetch records that have <code>medical_description BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchRangeOfMedicalDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.MEDICAL_DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>medical_description IN (values)</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchByMedicalDescription(String... values) {
        return fetch(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.MEDICAL_DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>pwo_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchRangeOfPwoId(String lowerInclusive, String upperInclusive) {
        return fetchRange(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.PWO_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>pwo_id IN (values)</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchByPwoId(String... values) {
        return fetch(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.PWO_ID, values);
    }

    /**
     * Fetch records that have <code>attachment BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchRangeOfAttachment(JSON lowerInclusive, JSON upperInclusive) {
        return fetchRange(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.ATTACHMENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>attachment IN (values)</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchByAttachment(JSON... values) {
        return fetch(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.ATTACHMENT, values);
    }

    /**
     * Fetch records that have <code>medical_raw_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchRangeOfMedicalRawId(String lowerInclusive, String upperInclusive) {
        return fetchRange(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.MEDICAL_RAW_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>medical_raw_id IN (values)</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchByMedicalRawId(String... values) {
        return fetch(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.MEDICAL_RAW_ID, values);
    }

    /**
     * Fetch records that have <code>parse_result BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchRangeOfParseResult(JSON lowerInclusive, JSON upperInclusive) {
        return fetchRange(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.PARSE_RESULT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>parse_result IN (values)</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchByParseResult(JSON... values) {
        return fetch(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.PARSE_RESULT, values);
    }

    /**
     * Fetch records that have <code>parse_template_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchRangeOfParseTemplateId(String lowerInclusive, String upperInclusive) {
        return fetchRange(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.PARSE_TEMPLATE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>parse_template_id IN (values)</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchByParseTemplateId(String... values) {
        return fetch(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.PARSE_TEMPLATE_ID, values);
    }

    /**
     * Fetch records that have <code>patient_medical_type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchRangeOfPatientMedicalType(String lowerInclusive, String upperInclusive) {
        return fetchRange(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.PATIENT_MEDICAL_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>patient_medical_type IN (values)</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchByPatientMedicalType(String... values) {
        return fetch(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.PATIENT_MEDICAL_TYPE, values);
    }

    /**
     * Fetch records that have <code>parse_template_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchRangeOfParseTemplateName(String lowerInclusive, String upperInclusive) {
        return fetchRange(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.PARSE_TEMPLATE_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>parse_template_name IN (values)</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchByParseTemplateName(String... values) {
        return fetch(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.PARSE_TEMPLATE_NAME, values);
    }

    /**
     * Fetch records that have <code>team_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchRangeOfTeamId(String lowerInclusive, String upperInclusive) {
        return fetchRange(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.TEAM_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>team_id IN (values)</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchByTeamId(String... values) {
        return fetch(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.TEAM_ID, values);
    }

    /**
     * Fetch records that have <code>desensitize_attachment BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchRangeOfDesensitizeAttachment(JSON lowerInclusive, JSON upperInclusive) {
        return fetchRange(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.DESENSITIZE_ATTACHMENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>desensitize_attachment IN (values)</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchByDesensitizeAttachment(JSON... values) {
        return fetch(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.DESENSITIZE_ATTACHMENT, values);
    }

    /**
     * Fetch records that have <code>is_test BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchRangeOfIsTest(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.IS_TEST, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_test IN (values)</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchByIsTest(Byte... values) {
        return fetch(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.IS_TEST, values);
    }

    /**
     * Fetch records that have <code>original_version BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchRangeOfOriginalVersion(Double lowerInclusive, Double upperInclusive) {
        return fetchRange(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.ORIGINAL_VERSION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>original_version IN (values)</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchByOriginalVersion(Double... values) {
        return fetch(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.ORIGINAL_VERSION, values);
    }

    /**
     * Fetch records that have <code>current_version BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchRangeOfCurrentVersion(Double lowerInclusive, Double upperInclusive) {
        return fetchRange(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.CURRENT_VERSION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>current_version IN (values)</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.PatientMedicalRecord> fetchByCurrentVersion(Double... values) {
        return fetch(PatientMedicalRecord.PATIENT_MEDICAL_RECORD.CURRENT_VERSION, values);
    }
}
