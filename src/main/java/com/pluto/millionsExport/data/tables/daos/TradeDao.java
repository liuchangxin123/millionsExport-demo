/*
 * This file is generated by jOOQ.
 */
package com.pluto.millionsExport.data.tables.daos;


import com.pluto.millionsExport.data.tables.Trade;
import com.pluto.millionsExport.data.tables.records.TradeRecord;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TradeDao extends DAOImpl<TradeRecord, com.pluto.millionsExport.data.tables.pojos.Trade, Integer> {

    /**
     * Create a new TradeDao without any configuration
     */
    public TradeDao() {
        super(Trade.TRADE, com.pluto.millionsExport.data.tables.pojos.Trade.class);
    }

    /**
     * Create a new TradeDao with an attached configuration
     */
    public TradeDao(Configuration configuration) {
        super(Trade.TRADE, com.pluto.millionsExport.data.tables.pojos.Trade.class, configuration);
    }

    @Override
    public Integer getId(com.pluto.millionsExport.data.tables.pojos.Trade object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.Trade> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Trade.TRADE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.Trade> fetchById(Integer... values) {
        return fetch(Trade.TRADE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.pluto.millionsExport.data.tables.pojos.Trade fetchOneById(Integer value) {
        return fetchOne(Trade.TRADE.ID, value);
    }

    /**
     * Fetch records that have <code>good_sn BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.Trade> fetchRangeOfGoodSn(String lowerInclusive, String upperInclusive) {
        return fetchRange(Trade.TRADE.GOOD_SN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>good_sn IN (values)</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.Trade> fetchByGoodSn(String... values) {
        return fetch(Trade.TRADE.GOOD_SN, values);
    }

    /**
     * Fetch records that have <code>reel_price BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.Trade> fetchRangeOfReelPrice(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Trade.TRADE.REEL_PRICE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>reel_price IN (values)</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.Trade> fetchByReelPrice(BigDecimal... values) {
        return fetch(Trade.TRADE.REEL_PRICE, values);
    }

    /**
     * Fetch records that have <code>operate BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.Trade> fetchRangeOfOperate(String lowerInclusive, String upperInclusive) {
        return fetchRange(Trade.TRADE.OPERATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>operate IN (values)</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.Trade> fetchByOperate(String... values) {
        return fetch(Trade.TRADE.OPERATE, values);
    }

    /**
     * Fetch records that have <code>created BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.Trade> fetchRangeOfCreated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Trade.TRADE.CREATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.Trade> fetchByCreated(LocalDateTime... values) {
        return fetch(Trade.TRADE.CREATED, values);
    }

    /**
     * Fetch records that have <code>updated BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.Trade> fetchRangeOfUpdated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Trade.TRADE.UPDATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated IN (values)</code>
     */
    public List<com.pluto.millionsExport.data.tables.pojos.Trade> fetchByUpdated(LocalDateTime... values) {
        return fetch(Trade.TRADE.UPDATED, values);
    }
}
