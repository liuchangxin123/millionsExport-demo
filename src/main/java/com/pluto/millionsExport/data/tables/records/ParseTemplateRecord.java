/*
 * This file is generated by jOOQ.
 */
package com.pluto.millionsExport.data.tables.records;


import com.pluto.millionsExport.data.tables.ParseTemplate;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.JSON;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ParseTemplateRecord extends TableRecordImpl<ParseTemplateRecord> implements Record12<String, String, LocalDateTime, Byte, Integer, String, LocalDateTime, JSON, String, String, String, Double> {

    private static final long serialVersionUID = -1449683234;

    /**
     * Setter for <code>learn.parse_template.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>learn.parse_template.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>learn.parse_template.create_by</code>.
     */
    public void setCreateBy(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>learn.parse_template.create_by</code>.
     */
    public String getCreateBy() {
        return (String) get(1);
    }

    /**
     * Setter for <code>learn.parse_template.create_time</code>.
     */
    public void setCreateTime(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>learn.parse_template.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>learn.parse_template.deleted</code>.
     */
    public void setDeleted(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>learn.parse_template.deleted</code>.
     */
    public Byte getDeleted() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>learn.parse_template.revision</code>.
     */
    public void setRevision(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>learn.parse_template.revision</code>.
     */
    public Integer getRevision() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>learn.parse_template.update_by</code>.
     */
    public void setUpdateBy(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>learn.parse_template.update_by</code>.
     */
    public String getUpdateBy() {
        return (String) get(5);
    }

    /**
     * Setter for <code>learn.parse_template.update_time</code>.
     */
    public void setUpdateTime(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>learn.parse_template.update_time</code>.
     */
    public LocalDateTime getUpdateTime() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>learn.parse_template.parse_data_setting</code>.
     */
    public void setParseDataSetting(JSON value) {
        set(7, value);
    }

    /**
     * Getter for <code>learn.parse_template.parse_data_setting</code>.
     */
    public JSON getParseDataSetting() {
        return (JSON) get(7);
    }

    /**
     * Setter for <code>learn.parse_template.parse_template_name</code>.
     */
    public void setParseTemplateName(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>learn.parse_template.parse_template_name</code>.
     */
    public String getParseTemplateName() {
        return (String) get(8);
    }

    /**
     * Setter for <code>learn.parse_template.pwo_type</code>.
     */
    public void setPwoType(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>learn.parse_template.pwo_type</code>.
     */
    public String getPwoType() {
        return (String) get(9);
    }

    /**
     * Setter for <code>learn.parse_template.parse_template_code</code>.
     */
    public void setParseTemplateCode(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>learn.parse_template.parse_template_code</code>.
     */
    public String getParseTemplateCode() {
        return (String) get(10);
    }

    /**
     * Setter for <code>learn.parse_template.version</code>. 版本号
     */
    public void setVersion(Double value) {
        set(11, value);
    }

    /**
     * Getter for <code>learn.parse_template.version</code>. 版本号
     */
    public Double getVersion() {
        return (Double) get(11);
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<String, String, LocalDateTime, Byte, Integer, String, LocalDateTime, JSON, String, String, String, Double> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<String, String, LocalDateTime, Byte, Integer, String, LocalDateTime, JSON, String, String, String, Double> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return ParseTemplate.PARSE_TEMPLATE.ID;
    }

    @Override
    public Field<String> field2() {
        return ParseTemplate.PARSE_TEMPLATE.CREATE_BY;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return ParseTemplate.PARSE_TEMPLATE.CREATE_TIME;
    }

    @Override
    public Field<Byte> field4() {
        return ParseTemplate.PARSE_TEMPLATE.DELETED;
    }

    @Override
    public Field<Integer> field5() {
        return ParseTemplate.PARSE_TEMPLATE.REVISION;
    }

    @Override
    public Field<String> field6() {
        return ParseTemplate.PARSE_TEMPLATE.UPDATE_BY;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return ParseTemplate.PARSE_TEMPLATE.UPDATE_TIME;
    }

    @Override
    public Field<JSON> field8() {
        return ParseTemplate.PARSE_TEMPLATE.PARSE_DATA_SETTING;
    }

    @Override
    public Field<String> field9() {
        return ParseTemplate.PARSE_TEMPLATE.PARSE_TEMPLATE_NAME;
    }

    @Override
    public Field<String> field10() {
        return ParseTemplate.PARSE_TEMPLATE.PWO_TYPE;
    }

    @Override
    public Field<String> field11() {
        return ParseTemplate.PARSE_TEMPLATE.PARSE_TEMPLATE_CODE;
    }

    @Override
    public Field<Double> field12() {
        return ParseTemplate.PARSE_TEMPLATE.VERSION;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getCreateBy();
    }

    @Override
    public LocalDateTime component3() {
        return getCreateTime();
    }

    @Override
    public Byte component4() {
        return getDeleted();
    }

    @Override
    public Integer component5() {
        return getRevision();
    }

    @Override
    public String component6() {
        return getUpdateBy();
    }

    @Override
    public LocalDateTime component7() {
        return getUpdateTime();
    }

    @Override
    public JSON component8() {
        return getParseDataSetting();
    }

    @Override
    public String component9() {
        return getParseTemplateName();
    }

    @Override
    public String component10() {
        return getPwoType();
    }

    @Override
    public String component11() {
        return getParseTemplateCode();
    }

    @Override
    public Double component12() {
        return getVersion();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getCreateBy();
    }

    @Override
    public LocalDateTime value3() {
        return getCreateTime();
    }

    @Override
    public Byte value4() {
        return getDeleted();
    }

    @Override
    public Integer value5() {
        return getRevision();
    }

    @Override
    public String value6() {
        return getUpdateBy();
    }

    @Override
    public LocalDateTime value7() {
        return getUpdateTime();
    }

    @Override
    public JSON value8() {
        return getParseDataSetting();
    }

    @Override
    public String value9() {
        return getParseTemplateName();
    }

    @Override
    public String value10() {
        return getPwoType();
    }

    @Override
    public String value11() {
        return getParseTemplateCode();
    }

    @Override
    public Double value12() {
        return getVersion();
    }

    @Override
    public ParseTemplateRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public ParseTemplateRecord value2(String value) {
        setCreateBy(value);
        return this;
    }

    @Override
    public ParseTemplateRecord value3(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public ParseTemplateRecord value4(Byte value) {
        setDeleted(value);
        return this;
    }

    @Override
    public ParseTemplateRecord value5(Integer value) {
        setRevision(value);
        return this;
    }

    @Override
    public ParseTemplateRecord value6(String value) {
        setUpdateBy(value);
        return this;
    }

    @Override
    public ParseTemplateRecord value7(LocalDateTime value) {
        setUpdateTime(value);
        return this;
    }

    @Override
    public ParseTemplateRecord value8(JSON value) {
        setParseDataSetting(value);
        return this;
    }

    @Override
    public ParseTemplateRecord value9(String value) {
        setParseTemplateName(value);
        return this;
    }

    @Override
    public ParseTemplateRecord value10(String value) {
        setPwoType(value);
        return this;
    }

    @Override
    public ParseTemplateRecord value11(String value) {
        setParseTemplateCode(value);
        return this;
    }

    @Override
    public ParseTemplateRecord value12(Double value) {
        setVersion(value);
        return this;
    }

    @Override
    public ParseTemplateRecord values(String value1, String value2, LocalDateTime value3, Byte value4, Integer value5, String value6, LocalDateTime value7, JSON value8, String value9, String value10, String value11, Double value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ParseTemplateRecord
     */
    public ParseTemplateRecord() {
        super(ParseTemplate.PARSE_TEMPLATE);
    }

    /**
     * Create a detached, initialised ParseTemplateRecord
     */
    public ParseTemplateRecord(String id, String createBy, LocalDateTime createTime, Byte deleted, Integer revision, String updateBy, LocalDateTime updateTime, JSON parseDataSetting, String parseTemplateName, String pwoType, String parseTemplateCode, Double version) {
        super(ParseTemplate.PARSE_TEMPLATE);

        set(0, id);
        set(1, createBy);
        set(2, createTime);
        set(3, deleted);
        set(4, revision);
        set(5, updateBy);
        set(6, updateTime);
        set(7, parseDataSetting);
        set(8, parseTemplateName);
        set(9, pwoType);
        set(10, parseTemplateCode);
        set(11, version);
    }
}
