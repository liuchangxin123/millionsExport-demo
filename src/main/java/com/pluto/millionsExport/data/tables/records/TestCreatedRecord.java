/*
 * This file is generated by jOOQ.
 */
package com.pluto.millionsExport.data.tables.records;


import com.pluto.millionsExport.data.tables.TestCreated;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 测试创建库
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TestCreatedRecord extends UpdatableRecordImpl<TestCreatedRecord> implements Record5<String, String, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = -1458108961;

    /**
     * Setter for <code>learn.test_created.id</code>. 标识
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>learn.test_created.id</code>. 标识
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>learn.test_created.tracking_id</code>. 链路追踪id
     */
    public void setTrackingId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>learn.test_created.tracking_id</code>. 链路追踪id
     */
    public String getTrackingId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>learn.test_created.open_id</code>. openId
     */
    public void setOpenId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>learn.test_created.open_id</code>. openId
     */
    public String getOpenId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>learn.test_created.created_time</code>. 创建时间
     */
    public void setCreatedTime(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>learn.test_created.created_time</code>. 创建时间
     */
    public LocalDateTime getCreatedTime() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>learn.test_created.update_time</code>. 更新时间
     */
    public void setUpdateTime(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>learn.test_created.update_time</code>. 更新时间
     */
    public LocalDateTime getUpdateTime() {
        return (LocalDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<String, String, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return TestCreated.TEST_CREATED.ID;
    }

    @Override
    public Field<String> field2() {
        return TestCreated.TEST_CREATED.TRACKING_ID;
    }

    @Override
    public Field<String> field3() {
        return TestCreated.TEST_CREATED.OPEN_ID;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return TestCreated.TEST_CREATED.CREATED_TIME;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return TestCreated.TEST_CREATED.UPDATE_TIME;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTrackingId();
    }

    @Override
    public String component3() {
        return getOpenId();
    }

    @Override
    public LocalDateTime component4() {
        return getCreatedTime();
    }

    @Override
    public LocalDateTime component5() {
        return getUpdateTime();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTrackingId();
    }

    @Override
    public String value3() {
        return getOpenId();
    }

    @Override
    public LocalDateTime value4() {
        return getCreatedTime();
    }

    @Override
    public LocalDateTime value5() {
        return getUpdateTime();
    }

    @Override
    public TestCreatedRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public TestCreatedRecord value2(String value) {
        setTrackingId(value);
        return this;
    }

    @Override
    public TestCreatedRecord value3(String value) {
        setOpenId(value);
        return this;
    }

    @Override
    public TestCreatedRecord value4(LocalDateTime value) {
        setCreatedTime(value);
        return this;
    }

    @Override
    public TestCreatedRecord value5(LocalDateTime value) {
        setUpdateTime(value);
        return this;
    }

    @Override
    public TestCreatedRecord values(String value1, String value2, String value3, LocalDateTime value4, LocalDateTime value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TestCreatedRecord
     */
    public TestCreatedRecord() {
        super(TestCreated.TEST_CREATED);
    }

    /**
     * Create a detached, initialised TestCreatedRecord
     */
    public TestCreatedRecord(String id, String trackingId, String openId, LocalDateTime createdTime, LocalDateTime updateTime) {
        super(TestCreated.TEST_CREATED);

        set(0, id);
        set(1, trackingId);
        set(2, openId);
        set(3, createdTime);
        set(4, updateTime);
    }
}
